defaults:
  - default.yaml
  - _self_

# Strategy A: LoRA on Depth Head Only (Fastest, Good Starting Point)
exp_name: lora_eth3d_strategy_a_r16

# LoRA Configuration
lora:
  enabled: True
  rank: 16                  # LoRA rank (start with 16)
  alpha: 32                 # LoRA alpha (alpha/rank = 2.0 scaling)
  dropout: 0.1              # LoRA dropout for regularization
  # Target only Depth Head modules
  target_modules:
    - "depth_head.projects.*"          # Conv layers in DPT projects
    - "depth_head.scratch.*"           # Scratch/fusion blocks
    - "depth_head.scratch.refinenet*.resConfUnit*.conv*"  # Residual conv units

img_size: 518
num_workers: 6
seed_value: 42
accum_steps: 1             # No gradient accumulation for 32GB VRAM
patch_size: 14
val_epoch_freq: 2          # Validate every 2 epochs
max_img_per_gpu: 4         # Conservative for 32GB with high-res images

# Batch size is max_img_per_gpu / sequence_length_effective
# ETH3D has variable sequence length (up to 8), so effective batch ~ 4/8 = 0.5
# We process full sequences

limit_train_batches: null  # Use all training data
limit_val_batches: null    # Use all validation data

# ETH3D Dataset
data:
  train:
    _target_: data.dynamic_dataloader.DynamicTorchDataset
    num_workers: ${num_workers}
    max_img_per_gpu: ${max_img_per_gpu}
    shuffle: True
    pin_memory: True
    common_config:
      img_size: ${img_size}
      patch_size: ${patch_size}
      debug: False
      repeat_batch: False
      training: True
      inside_random: True
      rescale: True
      rescale_aug: True
      landscape_check: False
      load_depth: True
      img_nums: [8, 8]  # Fixed sequence length for ETH3D
      augs:
        scales: null  # No scale augmentation for now
        aspects: [1.0, 1.0]  # Fixed aspect ratio
        cojitter: False
        color_jitter: null
        gray_scale: False
        gau_blur: False
    persistent_workers: True
    prefetch_factor: 4
    dataset:
      _target_: data.datasets.eth3d.ETH3DDataset
      root_dir: /home/zerun/data/dataset/ETH3D/Stereo/High-res_multi-view
      split: train
      sequence_length: 8
      use_building_scenes_only: True  # Focus on building facade scenes
      train_val_split: 0.85

  val:
    _target_: data.dynamic_dataloader.DynamicTorchDataset
    num_workers: ${num_workers}
    max_img_per_gpu: ${max_img_per_gpu}
    shuffle: False
    pin_memory: True
    common_config:
      img_size: ${img_size}
      patch_size: ${patch_size}
      debug: False
      repeat_batch: False
      training: False
      inside_random: False
      rescale: True
      rescale_aug: False
      landscape_check: False
      load_depth: True
      img_nums: [8, 8]  # Fixed sequence length for ETH3D
      augs:
        scales: null
        aspects: [1.0, 1.0]
        cojitter: False
        color_jitter: null
        gray_scale: False
        gau_blur: False
    persistent_workers: True
    prefetch_factor: 4
    dataset:
      _target_: data.datasets.eth3d.ETH3DDataset
      root_dir: /home/zerun/data/dataset/ETH3D/Stereo/High-res_multi-view
      split: val
      sequence_length: 8
      use_building_scenes_only: True
      train_val_split: 0.85

logging:
  log_dir: logs/${exp_name}
  log_visuals: True
  log_freq: 10
  log_level_primary: INFO
  log_level_secondary: WARNING
  all_ranks: False
  tensorboard_writer:
    _target_: train_utils.tb_writer.TensorBoardLogger
    path: ${logging.log_dir}/tensorboard
  scalar_keys_to_log:
    train:
      keys_to_log:
        - loss_objective
        - loss_camera
        - loss_T
        - loss_R
        - loss_FL
        - loss_conf_depth
        - loss_reg_depth
        - loss_grad_depth
    val:
      keys_to_log:
        - loss_objective
        - loss_camera
        - loss_T
        - loss_R
        - loss_FL
        - loss_conf_depth
        - loss_reg_depth
        - loss_grad_depth
  log_visual_frequency:
    train: 100
    val: 50
  visuals_keys_to_log:
    train:
      keys_to_log:
        - images
        - depth
      modality: video
    val:
      keys_to_log:
        - images
        - depth
      modality: video
  visuals_per_batch_to_log: 8
  video_logging_fps: 2

checkpoint:
  save_dir: logs/${exp_name}/ckpts
  save_freq: 2
  resume_checkpoint_path: ./pretrained/vggt-1b/model.pt  # Update this!
  strict: False
  enabled: true

# Loss weights - emphasize depth for building facades
loss:
  _target_: loss.MultitaskLoss
  camera:
    weight: 2.0              # Moderate camera loss (still important)
    loss_type: "l1"
  depth:
    weight: 5.0              # Strong depth loss (main focus)
    gradient_loss_fn: "grad"  # Gradient loss for smooth facades
    valid_range: 0.99        # Strict outlier filtering
  point: null                # Disable point loss
  track: null                # Disable track loss

optim:
  param_group_modifiers: False

  optimizer:
    _target_: torch.optim.AdamW
    lr: 1e-4                 # Higher LR for LoRA (10x full finetuning)
    weight_decay: 0.01       # Lower weight decay for LoRA

  frozen_module_names:
    - "*aggregator*"         # Freeze aggregator completely
    - "*camera_head*"        # Freeze camera head

  amp:
    enabled: True
    amp_dtype: bfloat16      # Use bfloat16 for RTX 5090

  gradient_clip:
    _target_: train_utils.gradient_clip.GradientClipper
    configs:
      - module_name: ["depth_head"]
        max_norm: 1.0
        norm_type: 2

  options:
    lr:
      - scheduler:
          _target_: fvcore.common.param_scheduler.CompositeParamScheduler
          schedulers:
            - _target_: fvcore.common.param_scheduler.LinearParamScheduler
              start_value: 1e-6
              end_value: 1e-4
            - _target_: fvcore.common.param_scheduler.CosineParamScheduler
              start_value: 1e-4
              end_value: 1e-6
          lengths: [0.1, 0.9]  # 10% warmup, 90% cosine decay
          interval_scaling: ['rescaled', 'rescaled']
    weight_decay:
      - scheduler:
          _target_: fvcore.common.param_scheduler.ConstantParamScheduler
          value: 0.01

max_epochs: 100

model:
  _target_: vggt.models.vggt.VGGT
  enable_camera: True
  enable_depth: True
  enable_point: False
  enable_track: False

distributed:
  backend: nccl
  comms_dtype: None
  find_unused_parameters: False
  timeout_mins: 30
  gradient_as_bucket_view: True
  bucket_cap_mb: 25
  broadcast_buffers: True

cuda:
  cudnn_deterministic: False
  cudnn_benchmark: True      # Enable for performance
  allow_tf32: True
