LoRA微调系统 - 文件结构
================================================================================

新增/修改的文件:
--------------------------------------------------------------------------------

📚 文档 (Documentation)
  ├── LORA_QUICKSTART.md                  快速上手指南（5分钟）
  ├── LORA_TRAINING_GUIDE.md              完整训练指南（3000+字）
  └── IMPLEMENTATION_SUMMARY.md           实现总结

🔧 核心代码 (Core Code)
  ├── training/
  │   ├── data/datasets/
  │   │   └── eth3d.py                    ETH3D数据集加载器 (431行)
  │   ├── lora_utils.py                   PEFT/LoRA工具库 (315行)
  │   └── trainer.py                      (修改) 添加LoRA支持

⚙️ 配置文件 (Configuration)
  ├── training/config/
  │   ├── lora_eth3d_strategy_a.yaml      策略A: Depth Head Only
  │   ├── lora_eth3d_strategy_b.yaml      策略B: Aggregator后期+Depth (推荐)
  │   └── lora_eth3d_strategy_c.yaml      策略C: Full LoRA
  └── requirements.txt                     (更新) 添加peft依赖

🛠️ 脚本工具 (Scripts)
  └── scripts/
      ├── train_lora_eth3d.sh             训练启动脚本
      └── evaluate_eth3d.py               评估脚本 (305行)

================================================================================

使用的数据集:
--------------------------------------------------------------------------------
/home/zerun/data/dataset/ETH3D/Stereo/High-res_multi-view/
├── multi_view_training_dslr_undistorted/     主图像 + COLMAP标定
│   ├── facade/
│   ├── electro/
│   ├── office/
│   ├── terrace/
│   └── delivery_area/
├── multi_view_training_dslr_occlusion/       遮挡掩膜
└── multi_view_training_dslr_scan_eval/       Ground Truth深度

================================================================================

生成的输出:
--------------------------------------------------------------------------------
logs/
└── lora_eth3d_strategy_{a,b,c}_r16/
    ├── tensorboard/                          TensorBoard日志
    ├── ckpts/
    │   ├── checkpoint.pth                    最新检查点
    │   └── checkpoint_{epoch}.pth            定期保存
    ├── trainer.log                           训练日志
    └── model.txt                             模型结构

eval_results/
├── metrics.txt                               评估指标
└── visualizations/                           深度可视化图

================================================================================

快速命令参考:
--------------------------------------------------------------------------------

🚀 开始训练（两种方式）:
  # 方式1: 使用脚本
  bash scripts/train_lora_eth3d.sh strategy_b

  # 方式2: 直接使用torchrun
  torchrun --nproc_per_node=1 training/launch.py --config lora_eth3d_strategy_b

⚠️ 注意: 即使单GPU也必须使用torchrun启动！

📊 监控训练:
  tensorboard --logdir logs/lora_eth3d_strategy_b_r16/tensorboard

🎯 评估模型:
  python scripts/evaluate_eth3d.py \
    --checkpoint logs/lora_eth3d_strategy_b_r16/ckpts/checkpoint.pth \
    --save-vis

================================================================================

三种策略对比:
--------------------------------------------------------------------------------

┌──────────┬─────────┬────────┬──────────┬──────────────┐
│ 策略     │ 参数量  │ 显存   │ 速度     │ 推荐场景     │
├──────────┼─────────┼────────┼──────────┼──────────────┤
│ A        │ ~8M     │ 12GB   │ ⚡⚡⚡   │ 快速测试     │
│ B (推荐) │ ~45M    │ 20GB   │ ⚡⚡     │ 生产部署     │
│ C        │ ~90M    │ 28GB   │ ⚡       │ 最大性能     │
└──────────┴─────────┴────────┴──────────┴──────────────┘

================================================================================

LoRA目标模块:
--------------------------------------------------------------------------------

策略A:
  ✓ depth_head.projects.*
  ✓ depth_head.scratch.*

策略B (推荐):
  ✓ aggregator.frame_blocks.12-23 (后期层)
  ✓ aggregator.global_blocks.12-23
  ✓ depth_head.*

策略C:
  ✓ aggregator.frame_blocks.* (全部24层)
  ✓ aggregator.global_blocks.*
  ✓ depth_head.*
  ✓ camera_head.*

================================================================================

文档索引:
--------------------------------------------------------------------------------

1. 新手入门:     LORA_QUICKSTART.md
2. 完整指南:     LORA_TRAINING_GUIDE.md
3. 实现总结:     IMPLEMENTATION_SUMMARY.md
4. 项目说明:     CLAUDE.md
5. 常规文档:     README.md

================================================================================

